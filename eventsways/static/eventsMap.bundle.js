!function(t){var e={};function i(n){if(e[n])return e[n].exports;var a=e[n]={i:n,l:!1,exports:{}};return t[n].call(a.exports,a,a.exports,i),a.l=!0,a.exports}i.m=t,i.c=e,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var a in t)i.d(n,a,function(e){return t[e]}.bind(null,a));return n},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=5)}({5:function(t,e){mapboxgl.accessToken="pk.eyJ1IjoicGF1bGJpZ21vdXRoIiwiYSI6ImNrNm83cTc0ZTBzNnMzbGx5YWdlNjFwOWwifQ.5V5xu7ylKhZeABTVBfwEKQ";let i=new mapboxgl.Map({container:"map",style:"mapbox://styles/mapbox/streets-v9",zoom:5,center:[27.586669921875,53.93021986394],pitch:45,bearing:17.6,trackResize:!0});i.on("dataloading",()=>{window.dispatchEvent(new Event("resize"))});let n=new mapboxgl.NavigationControl({showCompass:!0,showZoom:!0});var a={width:100,height:100,data:new Uint8Array(4e4),onAdd:function(){var t=document.createElement("canvas");t.width=this.width,t.height=this.height,this.context=t.getContext("2d")},render:function(){var t=performance.now()%1e3/1e3,e=35*t+15,n=this.context;return n.clearRect(0,0,this.width,this.height),n.beginPath(),n.arc(this.width/2,this.height/2,e,0,2*Math.PI),n.fillStyle="rgba(255, 200, 200,"+(1-t)+")",n.fill(),n.beginPath(),n.arc(this.width/2,this.height/2,15,0,2*Math.PI),n.fillStyle="rgba(255, 100, 100, 1)",n.strokeStyle="white",n.lineWidth=2+4*(1-t),n.fill(),n.stroke(),this.data=n.getImageData(0,0,this.width,this.height).data,i.triggerRepaint(),!0}};i.addControl(n,"bottom-right");let r={type:"FeatureCollection",features:[]};i.on("load",()=>{const t=document.querySelectorAll(".event-item");i.addImage("pulsing-dot",a,{pixelRatio:2}),t.forEach(t=>{r.features.push({type:"Feature",geometry:{type:"Point",coordinates:[+t.getAttribute("data-lng"),+t.getAttribute("data-lat")]},properties:{title:t.getAttribute("data-title"),date:t.getAttribute("data-date"),time:t.getAttribute("data-time"),place:t.getAttribute("data-place"),description:t.getAttribute("data-description"),href:t.getAttribute("data-href"),image:t.getAttribute("data-image")}})}),i.addSource("pointsSource",{type:"geojson",data:r}),i.addLayer({id:"points",source:"pointsSource",type:"symbol",layout:{"icon-image":"pulsing-dot"}})}),i.on("click",t=>{const e=i.queryRenderedFeatures(t.point,{layers:["points"]});if(e.length){i.panTo(t.lngLat),new mapboxgl.Popup({closeButton:!1}).setLngLat(t.lngLat).setHTML(`<section class="event-item">\n            <div class="event-img">\n              <a href=${e[0].properties.href} class="event-link-img">\n                <img src=${e[0].properties.image} alt="" />\n              </a>\n            </div>\n            <div class="container">\n              <div class="event-item-title">\n                <a href=${e[0].properties.href}>${e[0].properties.title}</a>\n              </div>\n              <p class="event-item-date">\n                <i class="far fa-calendar-alt"> ${e[0].properties.date}</i> \n                <i class="far fa-clock"> ${e[0].properties.time}</i> \n              </p>\n              <p class="event-item-description">\n                ${e[0].properties.description}\n              </p>\n              <p class="event-item-place">${e[0].properties.place}</p>\n            </div>\n          </section>`).addTo(i)}})}});